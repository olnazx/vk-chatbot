'use strict';

/**
 * Module dependencies.
 * @private
 */
const prequest = require('request-promise');

async function run ({ bot, args, options }) {
  const argPhoto = args.attachment('photo');

  if (!argPhoto) {
    return;
  }

  return bot.api.call('messages.getById', {
      message_ids: args.source.message_id
    })
    .then(response => {
      const key = response.items[0].attachments[0].photo.access_key;

      return bot.api.call('photos.getById', {
        photos: argPhoto + '_' + key
      });
    })
    .then(response => {
      const url = response[0].photo_604;

      return prequest.post({
        url: 'https://api.projectoxford.ai/emotion/v1.0/recognize', 

        headers: {
          'Content-Type': 'application/json', 
          'Ocp-Apim-Subscription-Key': options.api_key
        },

        body: {
          url
        },

        json: true
      });
    })
    .then(response => {
      if (!response || !response[0]) {
        return '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –ª–∏—Ü–æ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.';
      }

      let textToSend = '';
      const emotions = response[0].scores;

      for (let i = 0, emoKeys = Object.keys(emotions), len = emoKeys.length; i < len; i++) {
        emotions[emoKeys[i]] = (emotions[emoKeys[i]] * 100).toFixed(1) + '%';
      }

      if (response.length > 1) {
        textToSend += '–ù–∞ —Ñ–æ—Ç–æ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –ª–∏—Ü–∞. –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —ç–º–æ—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ. \n\n';
      }

      textToSend += `üò† –ó–ª–æ—Å—Ç—å: ${emotions.anger}\n` + 
                    `üòè –ü—Ä–µ–∑—Ä–µ–Ω–∏–µ: ${emotions.contempt}\n` + 
                    `üòí –û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ: ${emotions.disgust}\n` + 
                    `üò± –°—Ç—Ä–∞—Ö: ${emotions.fear}\n` + 
                    `üòä –°—á–∞—Å—Ç—å–µ: ${emotions.happiness}\n` + 
                    `üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ—Å—Ç—å: ${emotions.neutral}\n` + 
                    `üòû –ì—Ä—É—Å—Ç—å: ${emotions.sadness}\n` + 
                    `üò≤ –£–¥–∏–≤–ª–µ–Ω–∏–µ: ${emotions.surprise}`;

      return textToSend;
    })
    .catch(error => {
      // –û–¥–Ω–∞ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –æ—à–∏–±–æ–∫:
      // 1. –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
      // 2. –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏—è –ª–∏—Ü–∞ –Ω–∞ —Ñ–æ—Ç–æ
      // 3. –õ–∏—Ü –Ω–∞ —Ñ–æ—Ç–æ –±–æ–ª–µ–µ 64
      // 4. –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å content-type
      if (error.statusCode === 400) {
        return '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —ç–º–æ—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥—Ä—É–≥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é.';
      }

      // 401: –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª—é—á API
      // 403: –î–æ—Å—Ç–∏–≥–ª–∏ –º–µ—Å—è—á–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞ API –≤ 30000 –∑–∞–ø—Ä–æ—Å–æ–≤
      if (error.statusCode === 401 || error.statusCode === 403) {
        return '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π.';
      }

      // –î–æ—Å—Ç–∏–≥–ª–∏ –º–∏–Ω—É—Ç–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞
      if (error.statusCode === 429) {
        return '–°–µ–π—á–∞—Å –∑–∞–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.';
      }

      throw error;
    });
}

module.exports = {
  aliases: ['—ç–º–æ—Ü–∏–∏', '—ç–º–æ'],
  help_text: '/emo <–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ>\n\n–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —ç–º–æ—Ü–∏–∏ –Ω–∞ –ª–∏—Ü–µ —á–µ–ª–æ–≤–µ–∫–∞.',
  run
}
